name: calendly-appsync-${self:provider.stage}
schema: schema.api.graphql
authenticationType: AMAZON_COGNITO_USER_POOLS
userPoolConfig:
  awsRegion: "${self:provider.region}"
  defaultAction: ALLOW
  userPoolId: !Ref CognitoUserPool 
logConfig:
  loggingRoleArn: { Fn::GetAtt: [AppSyncLoggingServiceRole, Arn] }
  level: ALL
  excludeVerboseContent: false
xrayEnabled: true

mappingTemplates:
  - dataSource: Users
    type: Query
    field: myProfile    
  
  - dataSource: setUserLink
    type: Mutation
    field: setUserLink    

  - dataSource: Users
    type: Mutation
    field: setWorkingDays    

  - dataSource: UserEvent
    type: Mutation
    field: addEvent    

  - dataSource: UserEvent
    type: Query
    field: myEvents    

  - dataSource: UserSession
    type: Mutation
    field: addSession    

  - dataSource: UserSession
    type: Query
    field: mySessions    

dataSources:
  - type: AMAZON_DYNAMODB
    name: Users
    description: 'Users table'
    config:
      tableName: { Ref: UsersTable }

  - type: AMAZON_DYNAMODB
    name: UserLink
    description: 'User Link Table'
    config:
      tableName: { Ref: UserLinkTable }

  - type: AMAZON_DYNAMODB
    name: UserEvent
    description: 'User Event Table'
    config:
      tableName: { Ref: UserEventTable }

  - type: AMAZON_DYNAMODB
    name: UserSession
    description: 'User Session Table'
    config:
      tableName: { Ref: UserSessionTable }

  - type: AMAZON_DYNAMODB
    name: setUserLink
    description: 'Set URL Link for the User'
    config: 
      tableName: { Ref: UserLinkTable }
      iamRoleStatements:
        - Effect: Allow
          Action: dynamodb:PutItem
          Resource: !GetAtt UserLinkTable.Arn
        - Effect: Allow
          Action: dynamodb:UpdateItem
          Resource: !GetAtt UsersTable.Arn            

substitutions:
  UsersTable: !Ref UsersTable
  UserLinkTable: !Ref UserLinkTable